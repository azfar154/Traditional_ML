# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yH5QcKK3IwHPbuwM-Ub6f8TvS04GIsjd

**IMPORTANT READ ME!!!**
You must connect to a hosted gpu don't use your local environment. 
You can choose to run programs using GPU acceleration or with a TPU



Dark Mode is amazing so like on the top bar go to Tools then Preferences then change the mode to dark.



AZFAR MOHAMED Â© High School South
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib notebook
import numpy as np
import pandas as pd
import seaborn as sn
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
from sklearn.datasets import load_breast_cancer

"""Classifier Methods

Logistic Regression
"""

from sklearn.linear_model import LogisticRegression
##Load Breast Cancer Data
cancer = load_breast_cancer()
(X_cancer, y_cancer) = load_breast_cancer(return_X_y = True)
X_train,x_test,y_train,y_test=train_test_split(X_cancer,y_cancer,random_state=0)
#Logistic Regression formula uses Linear Regressions formula but makes the output either 0 or 1 it makes a s like line and there is a plane which divides the 2
#Formula is 1/1+exp[-(w hat x 0...x hat x n +b hat)]
logregress=LogisticRegression().fit(X_train,y_train)
print("Breast Cancer Data ")
print("The training data score is {:.2f}".format(logregress.score(X_train,y_train)))
print("The testing data score is {:.2f}".format(logregress.score(x_test,y_test)))

"""SVC"""

from sklearn.svm import LinearSVC
#Using LinearSVC helps increase the margin between the line the margin goes on till it hits a data point
clf=LinearSVC().fit(X_train,y_train)
print("Breast Cancer Data:")
print("The training data score is {:.2f}.".format(clf.score(X_train,y_train)))
print("The coeficcents are {}".format(clf.coef_))
print("The testing data score is {:.2f}.".format(clf.score(x_test,y_test)))

"""KNN NON LINEAR"""

from sklearn.neighbors import KNeighborsClassifier
knn=KNeighborsClassifier(n_neighbors=5).fit(X_train,y_train)
print("Breast Cancer Data:")
print("The training data score is {:.2f}".format(knn.score(X_train,y_train)))
print("The testing data score is {:.2f}".format(knn.score(x_test,y_test)))

